#include <tv_kit_vdk_pic_all.c>

// Define constants
#define BUTTON_SET_MODE 0x0f
#define BUTTON_RESET_MODE 0x0e

// Define variables
unsigned int8 key_press;
signed int8 units, tens, hundreds, limit;
int1 setting_mode = disable;

// Display the current limit on the 4-digit 7-segment LED display
void display_limit() {
  limit = hundreds * 100 + tens * 10 + units;
  md4l7d_giaima_3so_vitri_vn(limit, 3, cx_vn);
  xuat_4led_7doan_4so();
}

// Set the current limit
void set_limit() {
  key_press = key_4x4_dw();

  // Only allow setting the limit in setting mode
  if (setting_mode == enable) {
    // If the user pressed a valid button, update the limit
    if (key_press < 10) {
      units = tens;
      tens = hundreds;
      hundreds = key_press;
    }

    // If the user pressed the reset button, reset the limit
    if (key_press == BUTTON_RESET_MODE) {
      units = 0;
      tens = 0;
      hundreds = 0;
    }
  }

  // Display the current limit
  display_limit();
}

// Enter setting mode
void enter_setting_mode() {
  setting_mode = enable;
  xuat_32led_don_1dw(0x00ffff00);
}

// Exit setting mode
void exit_setting_mode() {
  setting_mode = disable;
  xuat_32led_don_1dw(0);
}

// Main function
void main() {
  // Set up the ports
  set_up_port();

  // Initialize the variables
  units = 0;
  tens = 0;
  hundreds = 0;

  // Display the current limit
  display_limit();

  // Enter the main loop
  while (TRUE) {
    // Set the limit if the user pressed a button
    set_limit();

    // Enter setting mode if the user pressed the set mode button
    if (key_press == BUTTON_SET_MODE) {
      enter_setting_mode();
    }

    // Exit setting mode if the user pressed the reset mode button
    if (key_press == BUTTON_RESET_MODE && setting_mode == enable) {
      exit_setting_mode();
    }
  }
}

